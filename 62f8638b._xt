
Module: ShapeClassifier.ShapeClassifier() [A]

                            Annotated Source Listing

Program : gp02-asa                                                     03/24/19
File    : C:\Users\xenil\Desktop\gp02-asa\src\main\java\com\asa\ShapeClassifier.java
Language: cw_Java_inst
Module   Module                                                      Start Num of
Letter   Name                                       v(G) ev(G) iv(G) Line  Lines
------   ----------------------------------------------------------- ----- ------
   A     ShapeClassifier.ShapeClassifier()            1     1     1      9      3

9        A0 A1              public ShapeClassifier() { 
10       A2                     badGuesses = 0; 
11       A3                 } 

Module: ShapeClassifier.calculateCirclePerimeter(int) [C]

                            Annotated Source Listing

Program : gp02-asa                                                     03/24/19
File    : C:\Users\xenil\Desktop\gp02-asa\src\main\java\com\asa\ShapeClassifier.java
Language: cw_Java_inst
Module   Module                                                      Start Num of
Letter   Name                                       v(G) ev(G) iv(G) Line  Lines
------   ----------------------------------------------------------- ----- ------
   C     ShapeClassifier.calculateCirclePerimeter(    1     1     1    108      3
          int)                                     

108      C0 C1              private double calculateCirclePerimeter(int r) { 
109      C2 C3                  return (Math.PI * r); 
110      C4                 } 

Module: ShapeClassifier.calculateEllipsePerimeter(int,int) [G]

                            Annotated Source Listing

Program : gp02-asa                                                     03/24/19
File    : C:\Users\xenil\Desktop\gp02-asa\src\main\java\com\asa\ShapeClassifier.java
Language: cw_Java_inst
Module   Module                                                      Start Num of
Letter   Name                                       v(G) ev(G) iv(G) Line  Lines
------   ----------------------------------------------------------- ----- ------
   G     ShapeClassifier.calculateEllipsePerimeter    1     1     1    130      6
          (int,int)                                

130      G0 G1              private double calculateEllipsePerimeter(int a, int b) { 
131      G2 G3 G4 G5            double da = a, db = b; 
132                             //use anouther formula (commented) 
133      G6 G7 G8 G9* G10 G11
                                return (2 * Math.PI * Math.sqrt((da * da + db * db) / 8)); 
134                     //      return (int) ((int) Math.PI * (3 * (da+db) - Math.sqrt((3*da+db)*(da+3*db)))); 
135      G12                } 

Module: ShapeClassifier.calculateRectanglePerimeter(int,int,int,int) [E]

                            Annotated Source Listing

Program : gp02-asa                                                     03/24/19
File    : C:\Users\xenil\Desktop\gp02-asa\src\main\java\com\asa\ShapeClassifier.java
Language: cw_Java_inst
Module   Module                                                      Start Num of
Letter   Name                                       v(G) ev(G) iv(G) Line  Lines
------   ----------------------------------------------------------- ----- ------
   E     ShapeClassifier.calculateRectanglePerimet    1     1     1    119      3
          er(int,int,int,int)                      

119      E0 E1              private int calculateRectanglePerimeter(int side1, int side2, int side3, int side4) { 
120      E2 E3                  return side1 * 2 + side2 * 2; 
121      E4                 } 

Module: ShapeClassifier.calculateSquarePerimeter(int) [D]

                            Annotated Source Listing

Program : gp02-asa                                                     03/24/19
File    : C:\Users\xenil\Desktop\gp02-asa\src\main\java\com\asa\ShapeClassifier.java
Language: cw_Java_inst
Module   Module                                                      Start Num of
Letter   Name                                       v(G) ev(G) iv(G) Line  Lines
------   ----------------------------------------------------------- ----- ------
   D     ShapeClassifier.calculateSquarePerimeter(    1     1     1    113      3
          int)                                     

113      D0 D1              private int calculateSquarePerimeter(int side) { 
114      D2 D3                  return 4 * side; 
115      D4                 } 

Module: ShapeClassifier.calculateTrianglePerimeter(int,int,int) [F]

                            Annotated Source Listing

Program : gp02-asa                                                     03/24/19
File    : C:\Users\xenil\Desktop\gp02-asa\src\main\java\com\asa\ShapeClassifier.java
Language: cw_Java_inst
Module   Module                                                      Start Num of
Letter   Name                                       v(G) ev(G) iv(G) Line  Lines
------   ----------------------------------------------------------- ----- ------
   F     ShapeClassifier.calculateTrianglePerimete    1     1     1    124      3
          r(int,int,int)                           

124      F0 F1              private int calculateTrianglePerimeter(int side1, int side2, int side3) { 
125      F2 F3                  return side1 + side2 + side3; 
126      F4                 } 

Module: ShapeClassifier.classify2Parameters(int,int) [L]

                            Annotated Source Listing

Program : gp02-asa                                                     03/24/19
File    : C:\Users\xenil\Desktop\gp02-asa\src\main\java\com\asa\ShapeClassifier.java
Language: cw_Java_inst
Module   Module                                                      Start Num of
Letter   Name                                       v(G) ev(G) iv(G) Line  Lines
------   ----------------------------------------------------------- ----- ------
   L     ShapeClassifier.classify2Parameters(int,i    2     1     1    168      7
          nt)                                      

168      L0 L1              private String classify2Parameters(int a, int b) { 
169      L2 L3                  if (a == b) { 
170      L4 L5                      return twoParamGuesses[0]; 
171      L6 L7 L8               } else { 
172      L9 L10                     return twoParamGuesses[1]; 
173      L11 L12                } 
174      L13                } 

Module: ShapeClassifier.classify3Parameters(int,int,int) [N]

                            Annotated Source Listing

Program : gp02-asa                                                     03/24/19
File    : C:\Users\xenil\Desktop\gp02-asa\src\main\java\com\asa\ShapeClassifier.java
Language: cw_Java_inst
Module   Module                                                      Start Num of
Letter   Name                                       v(G) ev(G) iv(G) Line  Lines
------   ----------------------------------------------------------- ----- ------
   N     ShapeClassifier.classify3Parameters(int,i    9     9     1    189     13
          nt,int)                                  

189      N0 N1              private String classify3Parameters(int a, int b, int c) { 
190                      
191      N2 N3 N4 N5            if ((a < (b + c)) && (b < (a + c)) && (c < (a + b))) { 
192      N6 N7 N8                   if (a == b && b == c) { 
193      N9 N10                         return threeParamGuesses[0]; // Equilateral 
194      N11 N12 N13 N14 N15 N16
                                    } else if (a == b || b == c || c == a) { 
195      N17 N18                        return threeParamGuesses[1];// Isosceles 
196      N19 N20 N21                } else { 
197      N22 N23                        return threeParamGuesses[2]; //Scalene 
198      N24 N25 N26                } 
199      N27 N28                } 
200      N29 N30                return ""; 
201      N31                } 

Module: ShapeClassifier.classify4Parameters(int,int,int,int) [M]

                            Annotated Source Listing

Program : gp02-asa                                                     03/24/19
File    : C:\Users\xenil\Desktop\gp02-asa\src\main\java\com\asa\ShapeClassifier.java
Language: cw_Java_inst
Module   Module                                                      Start Num of
Letter   Name                                       v(G) ev(G) iv(G) Line  Lines
------   ----------------------------------------------------------- ----- ------
   M     ShapeClassifier.classify4Parameters(int,i    6     6     1    177     10
          nt,int,int)                              

177      M0 M1              private String classify4Parameters(int a, int b, int c, int d) { 
178                             //we should make assumptions about rectanlge 
179                             //by SPECIFICATION a == c && b == d 
180      M2 M3 M4 M5            if (a == b && b == c && c == d) { 
181      M6 M7                      return fourParamGuesses[1]; 
182      M8 M9 M10 M11 M12
                                } else if (a == c && b == d) { 
183      M13 M14                    return fourParamGuesses[0]; 
184      M15 M16 M17            } 
185      M18 M19                return ""; 
186      M20                } 

Module: ShapeClassifier.evaluateGuess(java.lang.String) [B]

                            Annotated Source Listing

Program : gp02-asa                                                     03/24/19
File    : C:\Users\xenil\Desktop\gp02-asa\src\main\java\com\asa\ShapeClassifier.java
Language: cw_Java_inst
Module   Module                                                      Start Num of
Letter   Name                                       v(G) ev(G) iv(G) Line  Lines
------   ----------------------------------------------------------- ----- ------
   B     ShapeClassifier.evaluateGuess(java.lang.S   24    12    11     14     92
          tring)                                   

14       B0 B1              public String evaluateGuess(String arg) { 
15                       
16       B2 B3                  String shapeGuessResult = ""; 
17       B4 B5 B6 B7* B8
                                Integer[] parameters = getParams(arg); 
18       B9 B10 B11 B12* B13
                                String shapeGuess = getShapeGuess(arg); 
19       B14 B15 B16 B17* B18
                                String sizeGuess = getSizeGuess(arg); 
20       B19 B20 B21 B22* B23
                                String evenOddGuess = getEvenOddGuess(arg); 
21                       
22       B24 B25                double calcPerim = 0; 
23                       
24       B26                    if (shapeGuess == null) 
25       B27 B28                    shapeGuess = ""; 
26                       
27       B29                    if (sizeGuess == null) 
28       B30 B31                    sizeGuess = ""; 
29                       
30       B32                    if (evenOddGuess == null) 
31       B33 B34                    evenOddGuess = ""; 
32                       
33                       
34       B35                    switch (parameters.length) { 
35                                  case 1: 
36       B36 B37 B38* B39 B40
                                        if (shapeGuess.equals("Line")) { 
37       B41                                shapeGuessResult = shapeGuess; 
38       B42                                calcPerim = parameters[0]; 
39       B43 B44                        } 
40       B45                            break; 
41                                  case 2: //params[0] [1] 
42       B46 B47 B48 B49* B50
                                        shapeGuessResult = classify2Parameters(parameters[0], parameters[1]); 
43       B51 B52 B53* B54 B55
                                        if (shapeGuessResult.equals("Ellipse")) { 
44       B56 B57 B58 B59* B60
                                            calcPerim = calculateEllipsePerimeter(parameters[0], parameters[1]); 
45       B61 B62 B63                    } else { 
46       B64 B65 B66 B67* B68
                                            calcPerim = calculateCirclePerimeter(parameters[0]); 
47       B69 B70                        } 
48       B71                            break; 
49                                  case 3: 
50       B72 B73 B74 B75* B76
                                        shapeGuessResult = classify3Parameters(parameters[0], parameters[1], parameters[2]); 
51       B77 B78 B79 B80* B81
                                        calcPerim = calculateTrianglePerimeter(parameters[0], parameters[1], parameters[2]); 
52       B82                            break; 
53                                  case 4: 
54       B83 B84 B85 B86* B87
                                        shapeGuessResult = classify4Parameters(parameters[0], parameters[1], parameters[2], parameters[3]); 
55       B88 B89 B90 B91* B92 B93
                                        calcPerim = calculateRectanglePerimeter(parameters[0], parameters[1], parameters[2], parameters[3]); 
56       B94 B95 B96 B97
                                } 
57                       
58       B98 B99                Boolean isShapeGuessCorrect = null; 
59       B100 B101              Boolean isSizeGuessCorrect = null; 
60       B102 B103              Boolean isEvenOddCorrect = null; 
61                       
62                              // check the shape guess 
63       B104 B105 B106* B107
                                if (shapeGuessResult.equals(shapeGuess)) 
64       B108                       isShapeGuessCorrect = true; 
65       B109                   else 
66       B110 B111                  isShapeGuessCorrect = false; 
67                       
68                              // check the size guess 
69                              //Need 100 instead of 200 
70       B112 B113 B114 B115* B116 B117
                                if (calcPerim > 100 && sizeGuess.equals("Large")) { 
71       B118                       isSizeGuessCorrect = true; 
72       B119                   } //need <= 100 instead of < 10 
73       B120 B121 B122 B123 B124* B125 B126
                                else if (calcPerim <= 100 && sizeGuess.equals("Small")) { 
74       B127                       isSizeGuessCorrect = true; 
75       B128 B129 B130         } else { 
76       B131                       isSizeGuessCorrect = false; 
77       B132 B133 B134         } 
78                       
79       B135 B136              int product = 1; 
80       B137 B138              for (int param : parameters) { 
81       B139                       product *= param; 
82       B140 B141 B142         } 
83       B143 B144              boolean evenGuessResult = product % 2 == 0; 
84                       
85       B145 B146 B147 B148 B149* B150 B151
                                if (evenGuessResult && evenOddGuess.equals("Yes")) { 
86       B152                       isEvenOddCorrect = true; 
87       B153 B154 B155 B156 B157 B158 B159* B160 B161
                                } else if (!evenGuessResult && evenOddGuess.equals("No")) { 
88       B162                       isEvenOddCorrect = true; 
89       B163 B164 B165         } else { 
90       B166                       isEvenOddCorrect = false; 
91       B167 B168 B169         } 
92                       
93       B170 B171 B172 B173 B174 B175 B176
                                if (isShapeGuessCorrect && isSizeGuessCorrect && isEvenOddCorrect) { 
94       B177                       badGuesses = 0; 
95       B178 B179                  return "Yes"; 
96       B180 B181 B182         } else { 
97                                  // too many bad guesses 
98       B183 B184                  badGuesses++; 
99       B185 B186                  if (badGuesses >= 3) { 
100      B187 B188 B189* B190
                                        System.out.println("Bad guess limit Exceeded"); 
101      B191 B192 B193* B194
                                        System.exit(1); 
102      B195 B196                  } 
103      B197 B198                  return "No"; 
104      B199 B200              } 
105      B201               } 

Module: ShapeClassifier.getEvenOddGuess(java.lang.String) [I]

                            Annotated Source Listing

Program : gp02-asa                                                     03/24/19
File    : C:\Users\xenil\Desktop\gp02-asa\src\main\java\com\asa\ShapeClassifier.java
Language: cw_Java_inst
Module   Module                                                      Start Num of
Letter   Name                                       v(G) ev(G) iv(G) Line  Lines
------   ----------------------------------------------------------- ----- ------
   I     ShapeClassifier.getEvenOddGuess(java.lang    1     1     1    150      4
          .String)                                 

150      I0 I1              private String getEvenOddGuess(String args) { 
151      I2 I3 I4 I5* I6
                                String[] params = args.split(","); 
152      I7 I8                  return params[2]; 
153      I9                 } 

Module: ShapeClassifier.getParams(java.lang.String) [H]

                            Annotated Source Listing

Program : gp02-asa                                                     03/24/19
File    : C:\Users\xenil\Desktop\gp02-asa\src\main\java\com\asa\ShapeClassifier.java
Language: cw_Java_inst
Module   Module                                                      Start Num of
Letter   Name                                       v(G) ev(G) iv(G) Line  Lines
------   ----------------------------------------------------------- ----- ------
   H     ShapeClassifier.getParams(java.lang.Strin    2     1     2    138     10
          g)                                       

138      H0 H1              private Integer[] getParams(String args) { 
139      H2 H3 H4 H5* H6
                                String[] params = args.split(","); 
140      H7 H8                  Integer[] numParams = null; 
141                      
142      H9                     numParams = new Integer[params.length - 3]; 
143      H10 H11 H12 H13 H20 H21 H22 H23
                                for (int i = 3; i < params.length; i++) { 
144      H14 H15 H16 H17* H18
                                    numParams[i - 3] = Integer.parseInt(params[i]); 
145      H19                    } 
146      H24 H25                return numParams; 
147      H26                } 

Module: ShapeClassifier.getShapeGuess(java.lang.String) [K]

                            Annotated Source Listing

Program : gp02-asa                                                     03/24/19
File    : C:\Users\xenil\Desktop\gp02-asa\src\main\java\com\asa\ShapeClassifier.java
Language: cw_Java_inst
Module   Module                                                      Start Num of
Letter   Name                                       v(G) ev(G) iv(G) Line  Lines
------   ----------------------------------------------------------- ----- ------
   K     ShapeClassifier.getShapeGuess(java.lang.S    1     1     1    162      4
          tring)                                   

162      K0 K1              private String getShapeGuess(String args) { 
163      K2 K3 K4 K5* K6
                                String[] params = args.split(","); 
164      K7 K8                  return params[0]; 
165      K9                 } 

Module: ShapeClassifier.getSizeGuess(java.lang.String) [J]

                            Annotated Source Listing

Program : gp02-asa                                                     03/24/19
File    : C:\Users\xenil\Desktop\gp02-asa\src\main\java\com\asa\ShapeClassifier.java
Language: cw_Java_inst
Module   Module                                                      Start Num of
Letter   Name                                       v(G) ev(G) iv(G) Line  Lines
------   ----------------------------------------------------------- ----- ------
   J     ShapeClassifier.getSizeGuess(java.lang.St    1     1     1    156      4
          ring)                                    

156      J0 J1              private String getSizeGuess(String args) { 
157      J2 J3 J4 J5* J6
                                String[] params = args.split(","); 
158      J7 J8                  return params[1]; 
159      J9                 } 
